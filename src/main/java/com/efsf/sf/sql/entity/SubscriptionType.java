package com.efsf.sf.sql.entity;
// Generated 2013-08-01 09:42:02 by Hibernate Tools 3.2.1.GA

import com.efsf.sf.util.NumberSpeaker;
import java.math.BigDecimal;
import java.math.RoundingMode;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * SubscriptionType generated by hbm2java
 */
@Entity
@Table(name = "subscriptionType")
public class SubscriptionType implements java.io.Serializable {

    private Integer idSubscriptionType;
    private String name;
    private BigDecimal price;
    private Integer length;
    private Set<Subscription> subscriptions = new HashSet<Subscription>(0);
    private boolean active;
    private String description;
    
    
    public SubscriptionType() {
    }


    @Id
    @GeneratedValue(strategy = IDENTITY)
    @Column(name = "id_subscriptionType", unique = true, nullable = false)
    public Integer getIdSubscriptionType() {
        return this.idSubscriptionType;
    }

    public void setIdSubscriptionType(Integer idSubscriptionType) {
        this.idSubscriptionType = idSubscriptionType;
    }

    @Column(name = "name", length = 45)
    public String getName() {
        return this.name;
    }

    public void setName(String name) {
        this.name = name;
    }

    @Column(name = "price", precision = 5)
    public BigDecimal getPrice() {
        return this.price;
    }

    public void setPrice(BigDecimal price) {
        this.price = price;
    }

    @Column(name = "length")
    public Integer getLength() {
        return this.length;
    }

    public void setLength(Integer length) {
        this.length = length;
    }

    @OneToMany(cascade = CascadeType.ALL, fetch = FetchType.LAZY, mappedBy = "subscriptionType")
    public Set<Subscription> getSubscriptions() {
        return this.subscriptions;
    }

    public void setSubscriptions(Set<Subscription> subscriptions) {
        this.subscriptions = subscriptions;
    }
    
    public String priceSpeak() {
        return NumberSpeaker.speakNumber(price.doubleValue());
    }
    
   public String priceWithoutTax() {
        return price.divide(new BigDecimal(1.23), 2, RoundingMode.HALF_UP)
                .setScale(2, RoundingMode.UP).toPlainString();
        
    }
    
    public String priceWithTax() {
        return price.setScale(2, RoundingMode.UP).toPlainString();
    }
    
    public String tax() {
        return price.subtract(price.divide(new BigDecimal(1.23), 2, RoundingMode.HALF_UP))
                .setScale(2, RoundingMode.UP).toPlainString();
    }
    

    @Column(name = "active", nullable = false )
    public Boolean isActive() {
        return active;
    }

    public void setActive(Boolean active) {
        this.active = active;
    }

    @Column(name = "description", length = 1000)
    public String getDescription() {
        return description;
    }

    public void setDescription(String description) {
        this.description = description;
    }
}
